import{_ as a,c as n,o as l,b as p}from"./chunks/framework.CSxrXzdz.js";const d=JSON.parse('{"title":"响应性语法糖","description":"","frontmatter":{},"headers":[{"level":2,"title":"ref vs. 响应式变量","slug":"refs-vs-reactive-variables","link":"#refs-vs-reactive-variables","children":[]},{"level":2,"title":"通过 $() 解构","slug":"destructuring-with","link":"#destructuring-with","children":[]},{"level":2,"title":"用 $() 将现存的 ref 转换为响应式对象","slug":"convert-existing-refs-to-reactive-variables-with","link":"#convert-existing-refs-to-reactive-variables-with","children":[]},{"level":2,"title":"响应式 props 解构","slug":"reactive-props-destructure","link":"#reactive-props-destructure","children":[]},{"level":2,"title":"保持在函数间传递时的响应性","slug":"retaining-reactivity-across-function-boundaries","link":"#retaining-reactivity-across-function-boundaries","children":[{"level":3,"title":"以参数形式传入函数","slug":"passing-into-function-as-argument","link":"#passing-into-function-as-argument","children":[]},{"level":3,"title":"作为函数返回值","slug":"returning-inside-function-scope","link":"#returning-inside-function-scope","children":[]},{"level":3,"title":"在已解构的 props 上使用 $$()","slug":"using-on-destructured-props","link":"#using-on-destructured-props","children":[]}]},{"level":2,"title":"TypeScript 集成","slug":"typescript-integration","link":"#typescript-integration","children":[]},{"level":2,"title":"显式启用","slug":"explicit-opt-in","link":"#explicit-opt-in","children":[{"level":3,"title":"Vite","slug":"vite","link":"#vite","children":[]},{"level":3,"title":"vue-cli","slug":"vue-cli","link":"#vue-cli","children":[]},{"level":3,"title":"仅用 webpack + vue-loader","slug":"plain-webpack-vue-loader","link":"#plain-webpack-vue-loader","children":[]}]}],"relativePath":"guide/extras/reactivity-transform.md","filePath":"guide/extras/reactivity-transform.md"}'),e={name:"guide/extras/reactivity-transform.md"};function o(t,s,c,r,i,E){return l(),n("div",null,[...s[0]||(s[0]=[p("",73)])])}const u=a(e,[["render",o]]);export{d as __pageData,u as default};
