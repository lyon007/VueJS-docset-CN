import{_ as n,c as a,b as l,o as p}from"./chunks/framework.B2oIMGqn.js";const i=JSON.parse('{"title":"自定义渲染器 API","description":"","frontmatter":{},"headers":[{"level":2,"title":"createRenderer()","slug":"createrenderer","link":"#createrenderer","children":[]}],"relativePath":"api/custom-renderer.md","filePath":"api/custom-renderer.md"}'),o={name:"api/custom-renderer.md"};function e(t,s,r,c,y,E){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="custom-renderer-api" tabindex="-1">自定义渲染器 API <a class="header-anchor" href="#custom-renderer-api" aria-label="Permalink to &quot;自定义渲染器 API {#custom-renderer-api}&quot;">​</a></h1><h2 id="createrenderer" tabindex="-1">createRenderer() <a class="header-anchor" href="#createrenderer" aria-label="Permalink to &quot;createRenderer() {#createrenderer}&quot;">​</a></h2><p>创建一个自定义渲染器。通过提供平台特定的节点创建以及更改 API，你可以在非 DOM 环境中也享受到 Vue 核心运行时的特性。</p><ul><li><p><strong>类型</strong></p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> createRenderer</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt;(</span></span>
<span class="line"><span style="color:#FFAB70;">  options</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RendererOptions</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> Renderer</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> Renderer</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#FFAB70;">  render</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> RootRenderFunction</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#FFAB70;">  createApp</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> CreateAppFunction</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#B392F0;"> RendererOptions</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">HostElement</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#B392F0;">  patchProp</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#FFAB70;">    el</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    key</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    prevValue</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    nextValue</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    namespace</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> ElementNamespace</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    parentComponent</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> ComponentInternalInstance</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>
<span class="line"><span style="color:#B392F0;">  insert</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">el</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">parent</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">anchor</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>
<span class="line"><span style="color:#B392F0;">  remove</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">el</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>
<span class="line"><span style="color:#B392F0;">  createElement</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#FFAB70;">    type</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    namespace</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> ElementNamespace</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    isCustomizedBuiltIn</span><span style="color:#F97583;">?:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    vnodeProps</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">VNodeProps</span><span style="color:#F97583;"> &amp;</span><span style="color:#E1E4E8;"> { [</span><span style="color:#FFAB70;">key</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> any</span><span style="color:#E1E4E8;"> }) </span><span style="color:#F97583;">|</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span></span>
<span class="line"><span style="color:#B392F0;">  createText</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">text</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span></span>
<span class="line"><span style="color:#B392F0;">  createComment</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">text</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span></span>
<span class="line"><span style="color:#B392F0;">  setText</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">node</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">text</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>
<span class="line"><span style="color:#B392F0;">  setElementText</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">node</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">text</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>
<span class="line"><span style="color:#B392F0;">  parentNode</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">node</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span></span>
<span class="line"><span style="color:#B392F0;">  nextSibling</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">node</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span></span>
<span class="line"><span style="color:#B392F0;">  querySelector</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">selector</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span></span>
<span class="line"><span style="color:#B392F0;">  setScopeId</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">el</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">id</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> void</span></span>
<span class="line"><span style="color:#B392F0;">  cloneNode</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">node</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span></span>
<span class="line"><span style="color:#B392F0;">  insertStaticContent</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#FFAB70;">    content</span><span style="color:#F97583;">:</span><span style="color:#79B8FF;"> string</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    parent</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostElement</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    anchor</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    namespace</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> ElementNamespace</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    start</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#FFAB70;">    end</span><span style="color:#F97583;">?:</span><span style="color:#B392F0;"> HostNode</span><span style="color:#F97583;"> |</span><span style="color:#79B8FF;"> null</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  )</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> [</span><span style="color:#B392F0;">HostNode</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">HostNode</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre></div></li><li><p><strong>示例</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createRenderer } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &#39;@vue/runtime-core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">render</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">createApp</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> createRenderer</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  patchProp,</span></span>
<span class="line"><span style="color:#E1E4E8;">  insert,</span></span>
<span class="line"><span style="color:#E1E4E8;">  remove,</span></span>
<span class="line"><span style="color:#E1E4E8;">  createElement</span></span>
<span class="line"><span style="color:#6A737D;">  // ...</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// \`render\` 是底层 API</span></span>
<span class="line"><span style="color:#6A737D;">// \`createApp\` 返回一个应用实例</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> { render, createApp }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 重新导出 Vue 的核心 API</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#79B8FF;"> *</span><span style="color:#F97583;"> from</span><span style="color:#9ECBFF;"> &#39;@vue/runtime-core&#39;</span></span></code></pre></div><p>Vue 自身的 <code>@vue/runtime-dom</code> 也是<a href="https://github.com/vuejs/core/blob/main/packages/runtime-dom/src/index.ts" target="_blank" rel="noreferrer">利用这套 API 实现的</a>。要想了解一个简单一些的实现，请参考 <a href="https://github.com/vuejs/core/blob/main/packages/runtime-test/src/index.ts" target="_blank" rel="noreferrer"><code>@vue/runtime-test</code></a>，这是一个 Vue 自己做单元测试的私有包。</p></li></ul>`,4)]))}const B=n(o,[["render",e]]);export{i as __pageData,B as default};
